<!DOCTYPE html>
<html>
<head>
  <%- include('../partials/header') %>
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
  <style>
    .discussion {
      border: 1px solid #ddd;
      border-radius: 5px;
      padding: 20px;
      margin-bottom: 20px;
      background-color: #f9f9f9;
      box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
    }
    .discussion h2 {
      font-size: 1.5rem;
      margin-bottom: 10px;
      color: #007bff;
    }
    .discussion p {
      font-size: 1rem;
      margin-bottom: 10px;
      color: #555;
    }
    .discussion small {
      color: #666;
    }
    .create-post {
      margin-top: 20px;
    }
    .like-button, .comment-button, .delete-button {
      cursor: pointer;
      margin-right: 10px;
      margin-left:1rem;
    }
    .like-button {
      color: #666;
    }
    .like-button.liked {
      color: red;
    }
    .comment-button {
      color: #0275d8;
    }
    .delete-button {
      color: #d9534f;
    }
    .header-container {
      display: flex;
      justify-content: space-between;
      align-items: center;
      margin-bottom: 20px;
    }
    .favorite-posts-button {
      color: white;
      background-color: #007bff;
      border: none;
      padding: 10px 20px;
      border-radius: 5px;
      text-decoration: none;
    }
    .modal {
      display: none;
      position: fixed;
      z-index: 100;
      left: 0;
      top: 0;
      width: 100%;
      height: 100%;
      overflow: auto;
      background-color: rgb(0,0,0);
      background-color: rgba(0,0,0,0.4);
      display: flex;
      justify-content: center;
      align-items: center;
    }
    .modal-content {
      background-color: #fefefe;
      padding: 20px;
      border: 1px solid #888;
      width: 80%;
      max-width: 400px;
      text-align: center;
      border-radius: 10px;
    }
    .modal-buttons {
      display: flex;
      justify-content: space-around;
      margin-top: 20px;
    }
    .modal-buttons button {
      padding: 10px 20px;
      border: none;
      border-radius: 5px;
      cursor: pointer;
    }
    .modal-buttons .yes-button {
      background-color: #d9534f;
      color: white;
    }
    .modal-buttons .no-button {
      background-color: #5bc0de;
      color: white;
    }
    .blur {
      filter: blur(5px);
    }
    .noblur{
      filter:blur(0px);
    }
  .like-container {
  display: flex;
  align-items: center;
}

.like-button {
  margin-right: 5px; /* Adjust this value to increase or decrease the space between the heart and the number */
}

.like-count {
  margin-left: 5px;
  margin-right:10px; /* Adjust this value to increase or decrease the space between the number and the heart */
}
  </style>
</head>
<body>
  <%- include('../partials/navbar') %>

  <div class="container mt-5" id="allcontainer">
    <div class="header-container">
      <h1 class="mb-4">Discussions</h1>
     <% if(user) {%>
      <a href="/discussion/favoriteposts" class="favorite-posts-button">Favorite Posts</a>
      <%} %> 
    </div>
    <div class="discussions">
      <% if (discussions.length > 0) { %>
        <% discussions.forEach(discussion => { %>
          <div class="discussion shadow-sm p-3 mb-5 bg-white rounded">
            <h2 class="text-primary"><%= discussion.title %></h2>
            <p class="text-muted"><%= discussion.content %></p>
            <small class="text-secondary">Posted by User: <%= discussion.username %> on <%= new Date(discussion.createdAt).toLocaleString() %></small>
            <div class="like-container">
              <% if (user) { %>
                <i class="fas fa-heart like-button <%= listFavorites.includes(discussion.id) ? 'liked' : '' %>" onclick="toggleLike(this, '<%= discussion.id %>')"></i>
                <span class="like-count"><%= discussion.likeCount %></span>
              <% } %>
              <i class="fas fa-comment comment-button" onclick="openComments('<%= discussion.id %>')"></i>
              <span><%= discussion.commentCount %></span>
              <% if (user && user.username === discussion.username) { %>
                <i class="fas fa-trash delete-button" onclick="confirmDelete('<%= discussion.id %>')"></i>
              <% } %>
            </div>
          </div>
        <% }) %>
      <% } else { %>
        <p class="text-center text-warning">No discussions available.</p>
      <% } %>
    </div>
    <% if (user) { %>
      <div class="create-post text-center">
        <a href="/discussion/new" class="btn btn-primary btn-lg">Create New Post</a>
      </div>
    <% } %>
  </div>

  <div id="deleteModal" class="modal" style="display:none;">
    <div class="modal-content">
      <p>Are you sure you want to delete this post?</p>
      <div class="modal-buttons">
        <button class="yes-button" onclick="deletePost()">Yes</button>
        <button class="no-button" onclick="closeModal()">No</button>
      </div>
    </div>
  </div>

  <%- include('../partials/footer') %>

  <script>
    let postIdToDelete = null;

    async function toggleLike(button, postId) {
  const isLiked = button.classList.contains('liked');
  const url = isLiked ? `/removeFavorites/${postId}` : `/addFavorites/${postId}`;
  const method = isLiked ? 'DELETE' : 'POST';
  button.classList.toggle('liked');
  try {
    const response = await fetch(url, {
      method: method,
      headers: {
        'Content-Type': 'application/json',
        'Accept': 'application/json',
      },
      body: JSON.stringify({ postId: postId })
    });

    if (!response.ok) {
      throw new Error('Network response was not ok');
    }

    const data = await response.json();
    console.log('Success:', data);

    const likeCountElement = button.parentElement.querySelector('.like-count');
    if (likeCountElement) {
      let likeCount = parseInt(likeCountElement.textContent, 10);
      likeCount += isLiked ? -1 : 1;
      likeCountElement.textContent = likeCount;
    }
  } catch (error) {
    console.error('Error:', error);
    button.classList.toggle('liked');
  }
}

    function openComments(postId) {
      window.location.href = `/discussion/comments/${postId}`;
    }

    function confirmDelete(postId) {
      document.getElementById('deleteModal').style.display = 'flex';
      document.getElementById("allcontainer").classList.add("blur");
      postIdToDelete = postId;
    }

    function closeModal() {
      document.getElementById('deleteModal').style.display = 'none';
      document.getElementById("allcontainer").classList.remove("blur");
      postIdToDelete = null;
    }

    function deletePost() {
      if (postIdToDelete) {
        fetch(`/discussion/delete/${postIdToDelete}`, {
          method: 'DELETE',
        })
        .then(response => {
          location.reload();
        })
        .catch(error => {
          console.error('Error:', error);
          alert('Failed to delete post.');
        })
        .finally(() => {
          closeModal();
        });
      }
    }
  </script>
</body>
</html>
